{"version":3,"sources":["components/header/header.component.js","components/search-box/randomCities.js","components/search-box/searchBox.component.js","components/city-card/cityCard.component.js","App.js","reportWebVitals.js","index.js"],"names":["Header","randomCities","nameOfRandomeCity","max","length","Math","floor","random","SearchBox","poops","useState","searchCity","updateSearchCity","className","onSubmit","e","preventdefault","value","name","type","label","onChange","event","target","placeholder","onClick","console","log","handleCityChange","CityCard","App","props","newCity","setState","city","state","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oTAMeA,EAJA,WACb,OAAO,qD,OCHHC,EAAe,CACnB,YACA,UACA,SACA,QACA,YACA,QACA,QACA,gBACA,eACA,WACA,QACA,UACA,WACA,SACA,SACA,OACA,QACA,UACA,SACA,QACA,YACA,SACA,SACA,QACA,YACA,OACA,QACA,QACA,YACA,WACA,mBACA,WACA,YACA,cACA,QACA,UACA,SACA,cACA,SACA,SACA,QACA,SACA,UACA,SACA,SACA,SACA,UACA,SACA,SACA,WACA,QACA,UACA,eACA,SACA,SACA,UACA,UACA,mBACA,WACA,YACA,WACA,SACA,SACA,gBACA,YACA,QACA,SACA,YACA,aACA,aACA,gBACA,YACA,SACA,YACA,UACA,YACA,WACA,SACA,WACA,WACA,eACA,QACA,oBACA,YACA,OACA,UACA,QACA,OACA,UACA,YACA,OACA,QACA,SACA,iBACA,QACA,YACA,SACA,qBACA,SACA,cACA,SACA,UACA,iBACA,OACA,cACA,WACA,UACA,YACA,UACA,UACA,WACA,UACA,SACA,QACA,QACA,eACA,QACA,WAUaC,MARf,WACE,OAAOD,GAGaE,EAHaF,EAAaG,OAIvCC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMH,MAD/C,IAAsBA,GC1EPK,G,MA7CG,SAACC,GACjB,MAAuCC,mBAAS,IAAhD,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACE,qBAAKC,UAAU,YAAf,SACE,uBACEC,SAAU,SAACC,GACTA,EAAEC,kBAFN,UAKE,uBACEC,MAAON,EACPO,KAAK,OACLC,KAAK,OACLC,MAAM,OACNC,SAhBc,SAACC,GACrBV,EAAiBU,EAAMC,OAAON,QAgBxBO,YAAY,2BAGd,wBAAQL,KAAK,SAASM,QA/BJ,WACtBC,QAAQC,IAAIhB,GACZC,EAAiB,IACjBH,EAAMmB,iBAAiBjB,IA4BnB,sBAGA,wBAAQQ,KAAK,SAASM,QA5BK,WAC/BC,QAAQC,IAAIzB,KACZO,EAAMmB,iBAAiB1B,MA0BnB,sCCnCO2B,G,MAJE,WACf,OAAO,qBAAKhB,UAAU,YAAf,sBC0BMiB,G,wDAtBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAIRH,iBAAmB,SAACI,GAClB,EAAKC,SAAS,CAAEC,KAAMF,KAJtB,EAAKG,MAAQ,CAAED,KAAM,IAFJ,E,0CASnB,WACE,IAAQA,EAASE,KAAKD,MAAdD,KACR,OACE,sBAAKrB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWe,iBAAkBQ,KAAKR,mBACjCM,EACD,cAAC,EAAD,W,GAjBUG,IAAMC,YCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b1fce84e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = () => {\n  return <h1>Travel Weather App</h1>;\n};\n\nexport default Header;\n","const randomCities = [\n  \"Hong Kong\",\n  \"Bangkok\",\n  \"London\",\n  \"Macau\",\n  \"Singapore\",\n  \"Paris\",\n  \"Dubai\",\n  \"New York City\",\n  \"Kuala Lumpur\",\n  \"Istanbul\",\n  \"Delhi\",\n  \"Antalya\",\n  \"Shenzhen\",\n  \"Mumbai\",\n  \"Phuket\",\n  \"Rome\",\n  \"Tokyo\",\n  \"Pattaya\",\n  \"Taipei\",\n  \"Mecca\",\n  \"Guangzhou\",\n  \"Prague\",\n  \"Medina\",\n  \"Seoul\",\n  \"Amsterdam\",\n  \"Agra\",\n  \"Miami\",\n  \"Osaka\",\n  \"Las Vegas\",\n  \"Shanghai\",\n  \"Ho Chi Minh City\",\n  \"Denpasar\",\n  \"Barcelona\",\n  \"Los Angeles\",\n  \"Milan\",\n  \"Chennai\",\n  \"Vienna\",\n  \"Johor Bahru\",\n  \"Jaipur\",\n  \"Berlin\",\n  \"Cairo\",\n  \"Athens\",\n  \"Orlando\",\n  \"Moscow\",\n  \"Venice\",\n  \"Madrid\",\n  \"Ha Long\",\n  \"Riyadh\",\n  \"Dublin\",\n  \"Florence\",\n  \"Hanoi\",\n  \"Toronto\",\n  \"Johannesburg\",\n  \"Sydney\",\n  \"Munich\",\n  \"Jakarta\",\n  \"Beijing\",\n  \"Saint Petersburg\",\n  \"Brussels\",\n  \"Bielefeld\",\n  \"Budapest\",\n  \"Lisbon\",\n  \"Dammam\",\n  \"Penang Island\",\n  \"Heraklion\",\n  \"Kyoto\",\n  \"Zhuhai\",\n  \"Vancouver\",\n  \"Chiang Mai\",\n  \"Copenhagen\",\n  \"San Francisco\",\n  \"Melbourne\",\n  \"Warsaw\",\n  \"Marrakesh\",\n  \"Kolkata\",\n  \"Cebu City\",\n  \"Auckland\",\n  \"Guilin\",\n  \"Honolulu\",\n  \"Hurghada\",\n  \"Buenos Aires\",\n  \"Chiba\",\n  \"Frankfurt am Main\",\n  \"Stockholm\",\n  \"Lima\",\n  \"Da Nang\",\n  \"Batam\",\n  \"Nice\",\n  \"Fukuoka\",\n  \"Abu Dhabi\",\n  \"Jeju\",\n  \"Porto\",\n  \"Rhodes\",\n  \"Rio de Janeiro\",\n  \"Krabi\",\n  \"Bangalore\",\n  \"Mexico\",\n  \"Dominican Republic\",\n  \"Brazil\",\n  \"Switzerland\",\n  \"Canada\",\n  \"Germany\",\n  \"United Kingdom\",\n  \"Iran\",\n  \"Philippines\",\n  \"Colombia\",\n  \"Lebanon\",\n  \"Sri Lanka\",\n  \"Romania\",\n  \"Morocco\",\n  \"Bulgaria\",\n  \"Uruguay\",\n  \"Jordan\",\n  \"China\",\n  \"India\",\n  \"South Africa\",\n  \"Ghana\",\n  \"Ecuador\",\n];\nfunction nameOfRandomeCity() {\n  return randomCities[getRandomInt(randomCities.length)];\n}\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nexport default nameOfRandomeCity;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport nameOfRandomeCity from \"./randomCities\";\n\nimport \"./searchBox.styles.scss\";\n\nconst SearchBox = (poops) => {\n  const [searchCity, updateSearchCity] = useState(\"\");\n\n  const onSubmitHandler = () => {\n    console.log(searchCity);\n    updateSearchCity(\"\");\n    poops.handleCityChange(searchCity);\n  };\n\n  const onClickHandlerRandomCity = () => {\n    console.log(nameOfRandomeCity());\n    poops.handleCityChange(nameOfRandomeCity());\n  };\n\n  const changeHandler = (event) => {\n    updateSearchCity(event.target.value);\n  };\n\n  return (\n    <div className=\"SearchBox\">\n      <form\n        onSubmit={(e) => {\n          e.preventdefault();\n        }}\n      >\n        <input\n          value={searchCity}\n          name=\"city\"\n          type=\"text\"\n          label=\"city\"\n          onChange={changeHandler}\n          placeholder=\"Enter your destination\"\n        ></input>\n\n        <button type=\"button\" onClick={onSubmitHandler}>\n          Go ahead\n        </button>\n        <button type=\"button\" onClick={onClickHandlerRandomCity}>\n          I'm Feeling Lucky\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\n\nimport \"./cityCard.styles.scss\";\nconst CityCard = () => {\n  return <div className=\"city-card\"> samer</div>;\n};\n\nexport default CityCard;\n","import React from \"react\";\n\nimport Header from \"./components/header/header.component\";\nimport SearchBox from \"./components/search-box/searchBox.component\";\nimport CityCard from \"./components/city-card/cityCard.component\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { city: \"\" };\n  }\n\n  handleCityChange = (newCity) => {\n    this.setState({ city: newCity });\n  };\n\n  render() {\n    const { city } = this.state;\n    return (\n      <div className=\"App\">\n        <Header />\n        <SearchBox handleCityChange={this.handleCityChange} />\n        {city}\n        <CityCard></CityCard>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}